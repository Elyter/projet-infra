{"version":3,"sources":["component/HomeScreen.js","component/Classement.js","component/Login.js","component/Register.js","component/Profil.js","component/ProfilStack.js","App.js"],"names":["HomeScreen","ScrollView","style","flex","margin","Text","fontSize","marginBottom","marginTop","ClassementItem","props","position","View","flexDirection","backgroundColor","marginRight","prenom","nom","marginLeft","points","styles","StyleSheet","create","loading_container","left","right","top","bottom","alignItems","justifyContent","main_container","textAlign","buttons","Classement","navigation","navigate","replace","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","timeUp","setTimeUp","data","setData","isLoading","setIsLoading","rank","setRank","useEffect","setInterval","difference","Date","Math","floor","fetch","then","response","json","catch","error","console","classement","a","async","AsyncStorage","getItem","token","url","encodeURI","getClassement","ActivityIndicator","size","Button","onPress","title","FlatList","renderItem","item","Login","email","setEmail","password","setPassword","setError","TextInput","textContentType","autoCorrect","autoCompleteType","keyboardType","height","borderColor","borderWidth","onChangeText","text","value","secureTextEntry","loginReq","log","setItem","register","setPrenom","setNom","password2","setPassword2","errorServer","setErrorServer","radio","setRadio","onSelect","index","type","registerReq","color","infoReq","Profil","setPoints","getToken","removeItem","Stack","createStackNavigator","ProfilStack","Navigator","Screen","name","component","options","headerLeft","headerTitle","Register","Tab","createBottomTabNavigator","App","NavigationContainer","tabBarIcon","Ionicons","headerShown"],"mappings":"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","file":"static/js/app.b2333e53.chunk.js","sourcesContent":["import { View, ScrollView , Text } from \"react-native\";\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n      <ScrollView style={{ flex: 1, margin: 10 }}>\r\n        <Text style={{fontSize: 25, margin: 10}}>Comment jouer ?</Text>\r\n        <Text style={{fontSize: 17}}>50 QR codes seront cachés dans le lycée !</Text>\r\n        <Text style={{fontSize: 10}}>(Dans toute l'enceinte du lycée, extérieur et intérieur, sauf endroits non-accessibles aux élèves. Chaque QR code vaut 1 point.)</Text>\r\n        <Text style={{fontSize: 15}}>À chaque QR code trouvé et scanné, un point sera ajouté à votre compte.</Text>\r\n        <Text style={{fontSize: 15}}>Il faut scanner les QR codes directement avec l'application appareil photo de votre téléphone.</Text>\r\n        <Text style={{fontSize: 15}}>Plus vous aurez de points plus vous allez monter dans le classement !</Text>\r\n        <Text style={{fontSize: 25, margin: 10}}>Tranche de gagnant :</Text>\r\n        <Text style={{fontSize: 17, marginBottom: 8}}>1er : Gros paquet de chocolats + 2 produits gratuit par jours pendant une semaine à la cafet + une Wonderbox </Text>\r\n        <Text style={{fontSize: 17, marginBottom: 8}}>2ème-3ème : Paquet moyen de chocolats + 2 produits gratuit par jours pendant une semaine à la cafet</Text>\r\n        <Text style={{fontSize: 17}}>4ème-15ème : Petit paquet de chocolats</Text>\r\n        <Text style={{fontSize: 25, margin: 10}}>Règlement :</Text>\r\n        <Text style={{fontSize: 15}}>- Retirer ou dégrader les QR code est interdit.</Text>\r\n        <Text style={{fontSize: 15}}>- Un compte avec un Nom ou/et un Prénom inapproprié verra le compte supprimé.</Text>\r\n        <Text style={{fontSize: 15, marginTop: 10}}>Durée de l'évènement: 08/04 8h au 14/04 18h</Text>\r\n        <Text style={{marginTop: 40}}>Site web développé par Eliott Bregere</Text>\r\n      </ScrollView>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;","import { Text, View, StyleSheet, FlatList, ActivityIndicator, ScrollView, Button } from \"react-native\";\r\nimport {useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\n\r\nfunction classementReq() {\r\n  const url = `https://mdljm.fr:8443/qrcode/classement`\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.error(error))\r\n}\r\n\r\nconst getClassement = async () => {\r\n  const token = await AsyncStorage.getItem('token')\r\n  const url = `https://mdljm.fr:8443/account/getClassement?token=${encodeURI(token)}`\r\n  return fetch(url)\r\n  .then((response) => response.json())\r\n  .catch((error) => console.error(error))\r\n}\r\n\r\nconst ClassementItem = (props) =>{\r\n  if (props.position === 1) {\r\n    return (\r\n      <View style={{flexDirection: 'row', margin: 10, backgroundColor: '#d4ac0d'}}>\r\n        <Text style={{fontSize: 15}}>{props.position}.  </Text>\r\n        <Text style={{fontSize: 15, marginRight: 10}}>{props.prenom} {props.nom} 👑</Text>\r\n        <Text style={{fontSize: 15, marginLeft: 'auto'}}>{props.points} Points</Text>\r\n      </View>\r\n    )\r\n  } else if (props.position === 2 || props.position === 3) {\r\n    return (\r\n      <View style={{flexDirection: 'row', margin: 10, backgroundColor: '#aab7b8'}}>\r\n        <Text style={{fontSize: 15}}>{props.position}.  </Text>\r\n        <Text style={{fontSize: 15, marginRight: 10}}>{props.prenom} {props.nom}</Text>\r\n        <Text style={{fontSize: 15, marginLeft: 'auto'}}>{props.points} Points</Text>\r\n      </View>\r\n    )\r\n  } else if (props.position > 3 && props.position <= 15) {\r\n    return (\r\n      <View style={{flexDirection: 'row', margin: 10, backgroundColor: '#e59866'}}>\r\n        <Text style={{fontSize: 15}}>{props.position}.  </Text>\r\n        <Text style={{fontSize: 15, marginRight: 10}}>{props.prenom} {props.nom}</Text>\r\n        <Text style={{fontSize: 15, marginLeft: 'auto'}}>{props.points} Points</Text>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <View style={{flexDirection: 'row', margin: 10}}>\r\n        <Text style={{fontSize: 15}}>{props.position}.  </Text>\r\n        <Text style={{fontSize: 15, marginRight: 10}}>{props.prenom} {props.nom}</Text>\r\n        <Text style={{fontSize: 15, marginLeft: 'auto'}}>{props.points} Points</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst Classement = ({ navigation: { navigate, replace } }) => {\r\n  const [days, setDays] = useState(0);\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [timeUp, setTimeUp] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [rank, setRank] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n    let eventDate = new Date(\"2022-04-08T06:00:00.000Z\");\r\n    let difference = eventDate - new Date();\r\n    if(difference < 1) {\r\n      setTimeUp(true);\r\n    } else {\r\n      let days = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\r\n      let minutes = Math.floor((difference / 1000 / 60) % 60);\r\n      let seconds = Math.floor((difference / 1000) % 60);\r\n      setDays(days);\r\n      setHours(hours);\r\n      setMinutes(minutes);\r\n      setSeconds(seconds);\r\n    }\r\n    }, 1000);\r\n  }, []);\r\n  if (timeUp) {\r\n    if(isLoading){\r\n      classementReq().then(data => {\r\n        setData(data.classement)\r\n      })\r\n      getClassement().then(data => {\r\n        setRank(data.rank)\r\n      })\r\n      setIsLoading(false)\r\n      return <View style={styles.loading_container}><ActivityIndicator size='large' /></View>\r\n    } else {\r\n      return (\r\n        <ScrollView style={styles.classement}>\r\n          \r\n          <View style={styles.buttons}>\r\n          <Text>Votre rang est: {rank}</Text>\r\n                <Button\r\n                onPress={() => {\r\n                  setIsLoading(true)\r\n                }}\r\n                title=\"🔁\"\r\n                />\r\n            </View>\r\n          <FlatList data={data} renderItem={({ item }) => <ClassementItem position={item.position} prenom={item.prenom} nom={item.nom} points={item.points}/>}/>\r\n        </ScrollView>\r\n      );\r\n    }\r\n  } else {\r\n  return(\r\n    <View style={styles.main_container}>\r\n        <Text style={{marginBottom: 10}}>Bientôt ! 😉</Text>\r\n        <Text>{days} Jours {hours} Heures {minutes} minutes {seconds} secondes</Text>\r\n    </View>\r\n  )\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  loading_container: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 100,\r\n    bottom: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  main_container: {\r\n    flex:1,\r\n    textAlign:'center',\r\n    margin: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  buttons: {\r\n    marginTop: 30,\r\n    flexDirection:'row',\r\n    justifyContent:'space-evenly'\r\n  }\r\n})\r\n\r\nexport default Classement;","import { Text, View, TextInput, Button, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nfunction loginReq(email, password) {\r\n  const url = `https://mdljm.fr:8443/account/login?email=${encodeURI(email)}&password=${encodeURI(password)}`\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.error(error))\r\n}\r\n\r\nconst Login = ({ navigation: { navigate, replace }}) => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    if(isLoading) {\r\n        return <View style={styles.loading_container}><ActivityIndicator size='large' /></View>\r\n    }\r\n    \r\n    const getToken = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('token')\r\n            if(value !== null) {\r\n              replace(\"Profil\")\r\n            }\r\n        } catch(e) {\r\n            // error reading value\r\n        }\r\n    }\r\n    getToken()\r\n    return (\r\n        <View style={styles.main_container}>\r\n          <Text style={{fontSize: 17}}>Email:</Text>\r\n          <TextInput\r\n            textContentType={\"emailAddress\"}\r\n            autoCorrect={false}\r\n            autoCompleteType={\"email\"}\r\n            keyboardType={\"email-address\"}\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n            onChangeText={text => setEmail(text)}\r\n            value={email}\r\n          />\r\n          <Text style={{fontSize: 17}}>Mot de passe:</Text>\r\n          <TextInput\r\n            textContentType={\"password\"}\r\n            secureTextEntry={true}\r\n            autoCorrect={false}\r\n            autoCompleteType={\"password\"}\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n            onChangeText={text => setPassword(text)}\r\n            value={password}\r\n          />\r\n          <View style={styles.buttons}>\r\n            <Button\r\n              onPress={() => {\r\n                setIsLoading(true)\r\n                  loginReq(email, password).then(data => {\r\n                    console.log(data)\r\n                    if(!data.token){\r\n                        setError(\"Erreur: vos identifiants ne fonctionnent pas.\")\r\n                        setIsLoading(false)\r\n                    } else {\r\n                      var _storeToken = async () => {\r\n                        try {\r\n                          await AsyncStorage.setItem(\r\n                            'token',\r\n                            `${data.token}`\r\n                          );\r\n                        } catch (error) {\r\n                          setError(error)\r\n                        }\r\n                      };\r\n                      _storeToken()\r\n                      setIsLoading(false)\r\n                      navigate(\"Porfil\")\r\n                    }\r\n                  })\r\n              }}\r\n              title=\"Se connecter\"\r\n            />\r\n            <Button\r\n              onPress={() => {\r\n                navigate(\"Register\")\r\n              }}\r\n              title=\"Créer un compte ?\"\r\n            />\r\n          </View>\r\n          <Text>{error}</Text>\r\n        </View>\r\n      ) \r\n    }\r\n    \r\nconst styles = StyleSheet.create({\r\n  loading_container: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 100,\r\n    bottom: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  main_container: {\r\n    flex:1,\r\n    textAlign:'center',\r\n    margin: 10\r\n  },\r\n  buttons: {\r\n    marginTop: 30,\r\n    flexDirection:'row',\r\n    justifyContent:'space-evenly'\r\n  }\r\n})\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport { Text, ScrollView, View, TextInput, Button, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {RadioGroup, RadioButton} from 'react-native-flexi-radio-button'\r\n\r\nfunction registerReq(prenom, nom, email, type, password) {\r\n    const url = `https://mdljm.fr:8443/account/register?prenom=${encodeURI(prenom)}&nom=${encodeURI(nom)}&email=${encodeURI(email)}&type=${encodeURI(type)}&password=${encodeURI(password)}`\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(error))\r\n}\r\n\r\nconst register = ({navigation: {navigate, replace}}) =>{\r\n  const [prenom, setPrenom] = useState(\"\")\r\n  const [nom, setNom] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [password2, setPassword2] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n  const [errorServer, setErrorServer] = useState(\"\")\r\n  const [radio, setRadio] = useState(\"\")\r\n  let data = [{\r\n    value: 'Banana',\r\n  }, {\r\n    value: 'Mango',\r\n  }, {\r\n    value: 'Pear',\r\n  }];\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n    if(isLoading) {\r\n        return <View style={styles.loading_container}><ActivityIndicator size='large' /></View>\r\n    }\r\n\r\n\r\n  return (\r\n    <ScrollView style={styles.main_container}>\r\n      <Text style={{fontSize: 17}}>Prénom:</Text>\r\n      <TextInput\r\n        textContentType={\"username\"}\r\n        autoCorrect={false}\r\n        autoCompleteType={\"username\"}\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n        onChangeText={text => setPrenom(text)}\r\n        value={prenom}\r\n      />\r\n      <Text style={{fontSize: 17, marginTop: 25}}>Nom:</Text>\r\n      <TextInput\r\n        textContentType={\"username\"}\r\n        autoCorrect={false}\r\n        autoCompleteType={\"username\"}\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n        onChangeText={text => setNom(text)}\r\n        value={nom}\r\n      />\r\n      <Text style={{fontSize: 17, marginTop: 25}}>Email:</Text>\r\n      <TextInput\r\n        textContentType={\"emailAddress\"}\r\n        autoCorrect={false}\r\n        autoCompleteType={\"email\"}\r\n        keyboardType={\"email-address\"}\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n        onChangeText={text => setEmail(text)}\r\n        value={email}\r\n      />\r\n      <Text style={{fontSize: 17, marginTop: 25}}>Mot de passe:</Text>\r\n      <TextInput\r\n        textContentType={\"password\"}\r\n        secureTextEntry={true}\r\n        autoCorrect={false}\r\n        autoCompleteType={\"password\"}\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n        onChangeText={text =>{\r\n          setPassword(text)\r\n          if(password2 != text){\r\n            setError(\"Vos mots de passe sont différents\")\r\n          } else {\r\n            setError(\"\")\r\n          }\r\n        }}\r\n        value={password}\r\n      />\r\n      <Text style={{fontSize : 17, marginTop: 25}}>Réécrivez le mot de passe:</Text>\r\n      <TextInput\r\n        textContentType={\"password\"}\r\n        secureTextEntry={true}\r\n        autoCorrect={false}\r\n        autoCompleteType={\"password\"}\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n        onChangeText={text => {\r\n          setPassword2(text)\r\n          if(password != text){\r\n            setError(\"Vos mots de passe sont différents\")\r\n          } else {\r\n            setError(\"\")\r\n          }\r\n        }}\r\n        value={password2}\r\n      />\r\n      <RadioGroup\r\n        onSelect = {(index, value) => setRadio(value)}\r\n      >\r\n        <RadioButton value={'eleve'} >\r\n          <Text>Elève</Text>\r\n        </RadioButton>\r\n\r\n        <RadioButton value={'prof'}>\r\n          <Text>Professeur</Text>\r\n        </RadioButton>\r\n\r\n        <RadioButton value={'personnel'}>\r\n          <Text>Personnel</Text>\r\n        </RadioButton>\r\n      </RadioGroup>\r\n      <View style={{marginTop: 25, flexDirection:'row', justifyContent:'space-evenly'}}>\r\n        <Button\r\n        title=\"Créer le compte\"\r\n        onPress={() =>{\r\n          if(error === \"\" && radio != \"\"){\r\n            setIsLoading(true)\r\n            registerReq(prenom, nom, email, radio, password).then(data => {\r\n              if(!data.token){\r\n                  setErrorServer(\"Une erreur c'est produite. détails: \" + data.error)\r\n                  setIsLoading(false)\r\n              } else {\r\n                var _storeToken = async () => {\r\n                  try {\r\n                    await AsyncStorage.setItem(\r\n                      'token',\r\n                      `${data.token}`\r\n                    );\r\n                  } catch (error) {\r\n                    setErrorServer(error)\r\n                  }\r\n                };\r\n                _storeToken()\r\n                replace(\"Profil\")\r\n              }\r\n          })\r\n          }\r\n        }}\r\n        />\r\n      </View>\r\n      <Text style={{color: 'red'}}>{error}</Text>\r\n      <Text style={{color: 'red'}}>{errorServer}</Text>\r\n      <Text style={{fontSize: 9}}>Aucunes données personnelles ne sont collectées sauf celles rentrées pendant l'inscription. En cliquant sur \"créer le compte\" vous acceptez que vos données rentrées soit stocké et encrypté dans notre base de données.</Text>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    flex:1,\r\n    textAlign:'center',\r\n    marginRight: 10,\r\n    marginLeft: 10\r\n  },\r\n  loading_container: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 100,\r\n    bottom: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\nexport default register","import { View, Text, Button, StyleSheet } from \"react-native\";\r\nimport React, {useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nfunction infoReq(token) {\r\n    const url = `https://mdljm.fr:8443/account/info?token=${encodeURI(token)}`\r\n    return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.error(error))\r\n}\r\n   \r\nconst Profil = ({ navigation: { navigate, replace } }) => {\r\n    const [prenom, setPrenom] = useState(\"Chargement en cours...\")\r\n    const [nom, setNom] = useState(\"Chargement en cours...\")\r\n    const [email, setEmail] = useState(\"Chargement en cours...\")\r\n    const [points, setPoints] = useState(\"Chargement en cours...\")\r\n    const getToken = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('token')\r\n            if(value !== null) {\r\n                infoReq(value).then(data => {\r\n                    setPrenom(data.prenom)\r\n                    setNom(data.nom)\r\n                    setEmail(data.email)\r\n                    setPoints(data.points)\r\n                })\r\n            } else {\r\n                replace(\"Login\")\r\n            }\r\n        } catch(e) {\r\n            navigate(\"Login\")\r\n        }\r\n    }\r\n    getToken()\r\n    return (\r\n        <View style={styles.main_container}>\r\n            <View  style={styles.text}>\r\n                <Text>Nom: {nom}</Text>\r\n                <Text>Prénom: {prenom}</Text>\r\n                <Text>Email: {email}</Text>\r\n                <Text>Points: {points}</Text>\r\n            </View>\r\n            <View style={styles.buttons}>\r\n                <Button\r\n                onPress={() => {\r\n                    AsyncStorage.removeItem('token')\r\n                    replace(\"Login\")\r\n                }}\r\n                title=\"Se déconnecter\"\r\n                />\r\n            </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\nconst styles = StyleSheet.create({\r\n    main_container: {\r\n        flex: 1,\r\n    },\r\n    text: {\r\n        margin: 10,\r\n    },\r\n    buttons: {\r\n        marginTop: 30,\r\n        flexDirection:'row',\r\n        justifyContent:'space-evenly'\r\n    }\r\n})\r\n    \r\n    \r\nexport default Profil;","import 'react-native-gesture-handler';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport Profil from './Profil';\r\n\r\nfunction ProfilStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Profil\" component={Profil} />\r\n      <Stack.Screen name=\"Login\" component={Login} options={ () => ({headerLeft: null, headerTitle: \"Connexion\" })}/>\r\n      <Stack.Screen name=\"Register\" component={Register} options={ () => ({headerTitle: \"Inscription\" })}/>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default ProfilStack;","import { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport HomeScreen from './component/HomeScreen';\nimport Classement from './component/Classement';\nimport ProfilStack from './component/ProfilStack';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n       <Tab.Navigator>\n        <Tab.Screen \n          name=\"🐇 Pâques MDL 🥚\" \n          component={HomeScreen} \n          options={{\n            tabBarIcon: ({color, size})=> (\n              <Ionicons name={\"egg-outline\"} size={size} color={color} />\n            ),\n          }} \n        />\n        <Tab.Screen \n          name=\"Classement\"\n          component={Classement}\n          options={{\n            tabBarIcon: ({color, size})=> (\n              <Ionicons name={\"bar-chart-outline\"} size={size} color={color} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Profil\"\n          component={ProfilStack}\n          options={{\n            headerShown: false,\n            tabBarIcon: ({color, size})=> (\n              <Ionicons name={\"person-outline\"} size={size} color={color} />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"sourceRoot":""}